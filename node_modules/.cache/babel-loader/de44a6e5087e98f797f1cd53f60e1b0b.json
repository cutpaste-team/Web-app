{"ast":null,"code":"var _jsxFileName = \"/home/an/Documents/Github/Web-app/src/components/UploadButtons.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\n\nclass UploadButtons extends Component {\n  // Constructor\n  constructor() {\n    super();\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\"\n    };\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadHandler = this.uploadHandler.bind(this);\n  } // Function for previewing the chosen image\n\n\n  generatePreviewImageUrl(file, callback) {\n    const reader = new FileReader();\n    const url = reader.readAsDataURL(file);\n\n    reader.onloadend = e => callback(reader.result);\n  } // Event handler when image is chosen\n\n\n  handleChange(event) {\n    const file = event.target.files[0]; // If the image upload is cancelled\n\n    if (!file) {\n      return;\n    }\n\n    this.setState({\n      imageFile: file\n    });\n    this.generatePreviewImageUrl(file, previewImageUrl => {\n      this.setState({\n        previewImageUrl,\n        imagePrediction: \"\"\n      });\n    });\n  } // Function for sending image to the backend\n\n\n  uploadHandler(e) {\n    var self = this;\n    const formData = new FormData();\n    formData.append('file', this.state.imageFile, 'img.png');\n    var t0 = performance.now();\n    axios.post('http://127.0.0.1:5000/upload', formData).then(function (response, data) {\n      data = response.data;\n      self.setState({\n        imagePrediction: data\n      });\n      var t1 = performance.now();\n      console.log(\"The time it took to predict the image \" + (t1 - t0) + \" milliseconds.\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Upload an image for classification\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onClick: this.uploadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.previewImageUrl && /*#__PURE__*/React.createElement(\"img\", {\n      height: this.state.imageHeight,\n      alt: \"\",\n      src: this.state.previewImageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, this.state.imagePrediction && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"The model predicted: \", this.state.imagePrediction)))));\n  }\n\n}\n\nexport default UploadButtons;","map":{"version":3,"sources":["/home/an/Documents/Github/Web-app/src/components/UploadButtons.js"],"names":["makeStyles","Button","IconButton","PhotoCamera","React","Component","UploadButtons","constructor","state","previewImageUrl","imageHeight","imagePrediction","generatePreviewImageUrl","bind","handleChange","uploadHandler","file","callback","reader","FileReader","url","readAsDataURL","onloadend","e","result","event","target","files","setState","imageFile","self","formData","FormData","append","t0","performance","now","axios","post","then","response","data","t1","console","log","render"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\n\nclass UploadButtons extends Component {\n\n  // Constructor\n  constructor() {\n    super()\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\",\n    }\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.uploadHandler = this.uploadHandler.bind(this)\n  }\n\n    // Function for previewing the chosen image\n    generatePreviewImageUrl(file, callback) {\n      const reader = new FileReader()\n      const url = reader.readAsDataURL(file)\n      reader.onloadend = e => callback(reader.result)\n    }\n\n    // Event handler when image is chosen\n    handleChange(event) {\n      const file = event.target.files[0]\n      \n      // If the image upload is cancelled\n      if (!file) {\n        return\n      }\n\n      this.setState({imageFile: file})\n      this.generatePreviewImageUrl(file, previewImageUrl => {\n            this.setState({\n              previewImageUrl,\n              imagePrediction:\"\"\n            })\n          })\n    }\n\n    // Function for sending image to the backend\n    uploadHandler(e) {\n    var self = this;\n    const formData = new FormData()\n    formData.append('file', this.state.imageFile, 'img.png')\n    \n    var t0 = performance.now();\n    axios.post('http://127.0.0.1:5000/upload', formData)\n    .then(function(response, data) {\n            data = response.data;\n            self.setState({imagePrediction:data})\n            var t1 = performance.now();\n            console.log(\"The time it took to predict the image \" + (t1 - t0) + \" milliseconds.\")\n        })\n    }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className=\"App-upload\">\n          <p>\n            Upload an image for classification\n          </p>\n\n          {/* Button for choosing an image */}\n          <div>\n          <input type=\"file\" name=\"file\" onChange={this.handleChange} />\n          </div>\n\n          {/* Button for sending image to backend */}\n          <div>\n          <input type=\"submit\" onClick={this.uploadHandler} />\n          </div>\n\n          {/* Field for previewing the chosen image */}\n          <div>\n          { this.state.previewImageUrl &&\n          <img height={this.state.imageHeight} alt=\"\" src={this.state.previewImageUrl} />\n          }\n          </div>\n\n          {/* Text for model prediction */}\n          <div>\n          { this.state.imagePrediction &&\n            <p>The model predicted: {this.state.imagePrediction}\n            </p>\n\n          }\n          </div>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default UploadButtons;"]},"metadata":{},"sourceType":"module"}