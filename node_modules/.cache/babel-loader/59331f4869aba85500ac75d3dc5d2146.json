{"ast":null,"code":"var _jsxFileName = \"/home/an/Documents/Github/Web-app/src/components/UploadButtons.js\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass UploadButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\"\n    };\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadHandler = this.uploadHandler.bind(this);\n  } // Function for previewing the chosen image\n\n\n  generatePreviewImageUrl(file, callback) {\n    const reader = new FileReader();\n    const url = reader.readAsDataURL(file);\n\n    reader.onloadend = e => callback(reader.result);\n  } // Event handler when image is chosen\n\n\n  handleChange(event) {\n    const file = event.target.files[0]; // If the image upload is cancelled\n\n    if (!file) {\n      return;\n    }\n\n    this.setState({\n      imageFile: file\n    });\n    this.generatePreviewImageUrl(file, previewImageUrl => {\n      this.setState({\n        previewImageUrl,\n        imagePrediction: \"\"\n      });\n    });\n  } // Function for sending image to the backend\n\n\n  uploadHandler(e) {\n    var self = this;\n    const formData = new FormData();\n    formData.append(\"file\", this.state.imageFile, \"img.png\");\n    var t0 = performance.now();\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(\"http://09eecc97.ngrok.io\", formData, config).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      onClick: this.uploadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, this.state.previewImageUrl && /*#__PURE__*/React.createElement(\"img\", {\n      height: this.state.imageHeight,\n      alt: \"\",\n      src: this.state.previewImageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default UploadButtons;","map":{"version":3,"sources":["/home/an/Documents/Github/Web-app/src/components/UploadButtons.js"],"names":["Button","IconButton","PhotoCamera","React","Component","axios","UploadButtons","constructor","state","previewImageUrl","imageHeight","imagePrediction","generatePreviewImageUrl","bind","handleChange","uploadHandler","file","callback","reader","FileReader","url","readAsDataURL","onloadend","e","result","event","target","files","setState","imageFile","self","formData","FormData","append","t0","performance","now","config","headers","post","then","response","console","log","catch","error","render"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass UploadButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\",\n    };\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadHandler = this.uploadHandler.bind(this);\n  }\n  // Function for previewing the chosen image\n  generatePreviewImageUrl(file, callback) {\n    const reader = new FileReader();\n    const url = reader.readAsDataURL(file);\n    reader.onloadend = (e) => callback(reader.result);\n  }\n  // Event handler when image is chosen\n  handleChange(event) {\n    const file = event.target.files[0];\n    // If the image upload is cancelled\n    if (!file) {\n      return;\n    }\n\n    this.setState({ imageFile: file });\n    this.generatePreviewImageUrl(file, (previewImageUrl) => {\n      this.setState({\n        previewImageUrl,\n        imagePrediction: \"\",\n      });\n    });\n  }\n  // Function for sending image to the backend\n  uploadHandler(e) {\n    var self = this;\n    const formData = new FormData();\n    formData.append(\"file\", this.state.imageFile, \"img.png\");\n\n    var t0 = performance.now();\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    axios\n      .post(\"http://09eecc97.ngrok.io\", formData, config)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  render() {\n    return (\n      <div>\n        <input\n          accept=\"image/*\"\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n          onChange={this.handleChange}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component=\"span\"\n          onClick={this.uploadHandler}\n        >\n          Upload\n        </Button>\n        <label htmlFor=\"icon-button-file\">\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n          >\n            <PhotoCamera />\n          </IconButton>\n        </label>\n        <div className=\"imgPreview\">\n          {this.state.previewImageUrl && (\n            <img\n              height={this.state.imageHeight}\n              alt=\"\"\n              src={this.state.previewImageUrl}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UploadButtons;\n\n"]},"metadata":{},"sourceType":"module"}