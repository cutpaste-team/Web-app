{"ast":null,"code":"var _jsxFileName = \"/home/an/Documents/Github/Web-app/src/components/UploadButtons.js\";\nimport { Button, Radio } from 'antd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { notification, Space } from 'antd';\n\nclass UploadButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\",\n      uploadButton: false\n    };\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadHandler = this.uploadHandler.bind(this);\n  } // Function for previewing the chosen image\n\n\n  generatePreviewImageUrl(file, callback) {\n    const reader = new FileReader();\n    const url = reader.readAsDataURL(file);\n\n    reader.onloadend = e => callback(reader.result);\n  } // Event handler when image is chosen\n\n\n  handleChange(event) {\n    const openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Notification',\n        description: 'Uploaded success'\n      });\n    };\n\n    this.setState({\n      uploadButton: true\n    });\n    openNotificationWithIcon('success');\n    const file = event.target.files[0]; // If the image upload is cancelled\n\n    if (!file) {\n      return;\n    }\n\n    this.setState({\n      imageFile: file\n    });\n    this.generatePreviewImageUrl(file, previewImageUrl => {\n      this.setState({\n        previewImageUrl,\n        imagePrediction: \"\"\n      });\n    });\n  } // Function for sending image to the backend\n\n\n  uploadHandler(e) {\n    var self = this;\n    const formData = new FormData();\n    formData.append(\"file\", this.state.imageFile, \"img.png\");\n    var t0 = performance.now();\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(\"http://09eecc97.ngrok.io\", formData, config).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      accept: \"image/*\",\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, this.state.uploadButton && /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      size: \"default\",\n      disable: \"true\",\n      onClick: this.uploadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 39\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"icon-button-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imgPreview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, this.state.previewImageUrl && /*#__PURE__*/React.createElement(\"img\", {\n      height: this.state.imageHeight,\n      alt: \"\",\n      src: this.state.previewImageUrl,\n      width: 280,\n      height: 270,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default UploadButtons;","map":{"version":3,"sources":["/home/an/Documents/Github/Web-app/src/components/UploadButtons.js"],"names":["Button","Radio","IconButton","PhotoCamera","React","Component","axios","notification","Space","UploadButtons","constructor","state","previewImageUrl","imageHeight","imagePrediction","uploadButton","generatePreviewImageUrl","bind","handleChange","uploadHandler","file","callback","reader","FileReader","url","readAsDataURL","onloadend","e","result","event","openNotificationWithIcon","type","message","description","setState","target","files","imageFile","self","formData","FormData","append","t0","performance","now","config","headers","post","then","response","console","log","catch","error","render"],"mappings":"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","sourcesContent":["import { Button, Radio } from 'antd';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport \"./css/Upload.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { notification, Space } from 'antd';\n\nclass UploadButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      previewImageUrl: false,\n      imageHeight: 200,\n      imagePrediction: \"\",\n      uploadButton: false\n    };\n    this.generatePreviewImageUrl = this.generatePreviewImageUrl.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.uploadHandler = this.uploadHandler.bind(this);\n  }\n  // Function for previewing the chosen image\n  generatePreviewImageUrl(file, callback) {\n    const reader = new FileReader();\n    const url = reader.readAsDataURL(file);\n    reader.onloadend = (e) => callback(reader.result);\n  }\n  // Event handler when image is chosen\n  handleChange(event) {\n    const openNotificationWithIcon = type => {\n      notification[type]({\n        message: 'Notification',\n        description:\n          'Uploaded success',\n      });\n    };\n    this.setState({uploadButton: true});\n    openNotificationWithIcon('success');\n    const file = event.target.files[0];\n    // If the image upload is cancelled\n    if (!file) {\n      return;\n    }\n\n    this.setState({ imageFile: file });\n    this.generatePreviewImageUrl(file, (previewImageUrl) => {\n      this.setState({\n        previewImageUrl,\n        imagePrediction: \"\",\n      });\n    });\n  }\n  // Function for sending image to the backend\n  uploadHandler(e) {\n   \n    var self = this;\n    const formData = new FormData();\n    formData.append(\"file\", this.state.imageFile, \"img.png\");\n\n    var t0 = performance.now();\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    axios\n      .post(\"http://09eecc97.ngrok.io\", formData, config)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  \n  render() {\n    \n    return (\n      <div>\n        <input\n          accept=\"image/*\"\n          id=\"contained-button-file\"\n          multiple\n          type=\"file\"\n          onChange={this.handleChange}\n        />\n        \n        <div className=\"upload-icon\">\n          {this.state.uploadButton && <Button\n           type=\"primary\"\n            size=\"default\"\n            disable=\"true\"\n            onClick={this.uploadHandler}>\n            Upload\n          </Button>}\n          <label htmlFor=\"icon-button-file\">\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n            >\n              <PhotoCamera />\n            </IconButton>\n          </label>\n        </div>\n        <div className=\"imgPreview\">\n          {this.state.previewImageUrl && (\n            <img\n              height={this.state.imageHeight}\n              alt=\"\"\n              src={this.state.previewImageUrl}\n              width={280}\n              height={270}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UploadButtons;"]},"metadata":{},"sourceType":"module"}